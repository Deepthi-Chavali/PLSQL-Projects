-- Step 1: Create a Table to Log Query Performance
CREATE TABLE query_performance_log (
    log_id          NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    sql_id          VARCHAR2(100),
    sql_text        CLOB,
    execution_time  NUMBER,  -- in milliseconds
    cpu_time        NUMBER,
    io_wait_time    NUMBER,
    fetches         NUMBER,
    disk_reads      NUMBER,
    buffer_gets     NUMBER,
    timestamp       TIMESTAMP DEFAULT SYSTIMESTAMP
);

-- Step 2: PL/SQL Procedure to Capture Slow Queries
CREATE OR REPLACE PROCEDURE capture_slow_queries AS
BEGIN
    INSERT INTO query_performance_log (sql_id, sql_text, execution_time, cpu_time, io_wait_time, fetches, disk_reads, buffer_gets)
    SELECT sql_id, sql_text, elapsed_time/1000, cpu_time/1000, iowait / 1000, fetches, disk_reads, buffer_gets
    FROM v$sql
    WHERE elapsed_time > (SELECT AVG(elapsed_time) FROM v$sql)
    AND rownum <= 10;

    COMMIT;
END;
/

-- Step 3: Schedule the Job to Run Every 30 Minutes
BEGIN
    DBMS_SCHEDULER.create_job (
        job_name        => 'SLOW_QUERY_MONITOR_JOB',
        job_type        => 'PLSQL_BLOCK',
        job_action      => 'BEGIN capture_slow_queries; END;',
        start_date      => SYSTIMESTAMP,
        repeat_interval => 'FREQ=MINUTELY; INTERVAL=30',
        enabled         => TRUE
    );
END;
/

-- Step 4: Query to Generate Performance Report
SELECT sql_id, COUNT(*) AS execution_count, AVG(execution_time) AS avg_time, 
       MAX(execution_time) AS max_time, MIN(execution_time) AS min_time
FROM query_performance_log
GROUP BY sql_id
ORDER BY avg_time DESC;

-- Step 5: Set Up Email Alert for Slow Queries
DECLARE
    v_count NUMBER;
BEGIN
    SELECT COUNT(*) INTO v_count 
    FROM query_performance_log 
    WHERE execution_time > 5000;  -- Queries taking more than 5 sec

    IF v_count > 0 THEN
        UTL_MAIL.send(
            sender      => 'admin@yourcompany.com',
            recipients  => 'dba_team@yourcompany.com',
            subject     => 'Alert: Slow Queries Detected',
            message     => 'There are slow queries exceeding 5 seconds execution time. Please check the logs.'
        );
    END IF;
END;
/

-- Step 6: Archival & Purging Old Query Logs
CREATE TABLE query_performance_archive AS 
SELECT * FROM query_performance_log WHERE 1=0;

INSERT INTO query_performance_archive
SELECT * FROM query_performance_log WHERE timestamp < SYSDATE - 30;

DELETE FROM query_performance_log WHERE timestamp < SYSDATE - 30;

COMMIT;
